"use strict";

var app = {
  pathToLibsFiles: './assets/libs'
};
window.app = app; // polyfills
// before polyfills

(function (arr) {
  arr.forEach(function (item) {
    if (item.hasOwnProperty('before')) {
      return;
    }

    Object.defineProperty(item, 'before', {
      configurable: true,
      enumerable: true,
      writable: true,
      value: function before() {
        // eslint-disable-next-line prefer-rest-params
        var argArr = Array.prototype.slice.call(arguments);
        var docFrag = document.createDocumentFragment();
        argArr.forEach(function (argItem) {
          var isNode = argItem instanceof Node;
          docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));
        });
        this.parentNode.insertBefore(docFrag, this);
      }
    });
  });
})([Element.prototype, CharacterData.prototype, DocumentType.prototype]); // forEach polyfill


if (window.NodeList && !NodeList.prototype.forEach) {
  NodeList.prototype.forEach = function (callback, thisArg) {
    // eslint-disable-next-line no-param-reassign
    thisArg = thisArg || window;

    for (var i = 0; i < this.length; i++) {
      callback.call(thisArg, this[i], i, this);
    }
  };
}

document.addEventListener('DOMContentLoaded', function () {
  var dataList = document.querySelectorAll('div[data-list]');
  var bw = document.body.clientWidth;
  dataList.forEach(function (item) {
    if (bw < 576) {
      item.classList.remove('active');
    }
  });
});

var accordion = function accordion() {
  var main = document.querySelector('.main');
  var contentItem = document.querySelectorAll('.content-item');
  var subContentItem = document.querySelectorAll('.sub-content__item');
  var dataElem = document.querySelectorAll('div[data-search]');
  var dataList = document.querySelectorAll('div[data-list]');
  var searchResultsBlock = document.querySelector('.search-results__block');

  var openFirstLevel = function openFirstLevel(button, dropdown) {
    /* eslint-disable-next-line */
    closeDrops();
    button.classList.add('active');
    dropdown.classList.add('active');
  };

  var close = function close(button, dropdown) {
    button.classList.remove('active');
    dropdown.classList.remove('active');
  };

  var openSecondLevel = function openSecondLevel(button, dropdown) {
    /* eslint-disable-next-line */
    closeSecondLevelDrops();
    button.classList.add('active');
    dropdown.classList.add('active');
  };

  var closeSecondLevelDrops = function closeSecondLevelDrops(button, dropdown) {
    /* eslint-disable-next-line */
    subContentItem.forEach(function (item) {
      if (item.children[0] !== button && item.children[1] !== dropdown) {
        close(item.children[0], item.children[1]);
      }
    });
  };

  var closeDrops = function closeDrops(button, dropdown) {
    /* eslint-disable-next-line */
    contentItem.forEach(function (item) {
      if (item.children[0] !== button && item.children[1] !== dropdown) {
        close(item.children[0], item.children[1]);
      }
    });
    closeSecondLevelDrops();
  };

  main.addEventListener('click', function (e) {
    /* eslint-disable-next-line */
    var target = e.target;
    /* eslint-disable-next-line */

    determineHeight();

    if (e.target.closest('.search-result')) {
      searchResultsBlock.style.display = 'none';
      dataElem.forEach(function (item) {
        /* eslint-disable-next-line */
        if (item.dataset.search == e.target.dataset.search) {
          item.classList.add('active');
          /* eslint-disable-next-line */

          determineHeight();
        } else {
          item.classList.remove('active');
        }

        dataList.forEach(function (list) {
          /* eslint-disable-next-line */
          if (list.dataset.list == e.target.dataset.list) {
            list.classList.add('active');
            list.scrollIntoView({
              behavior: 'smooth',
              block: 'start',
              inline: 'center'
            });
            /* eslint-disable-next-line */

            determineHeight();
          } else {
            list.classList.remove('active');
          }
        });
      });
    }

    if (e.target.closest('.content-title')) {
      var parent = target.closest('.content-item');
      var button = target.closest('.content-title');
      var dropdown = parent.querySelector('.sub-content');
      /* eslint-disable-next-line */

      dropdown.classList.contains('active') ? close(button, dropdown) : openFirstLevel(button, dropdown);
      /* eslint-disable-next-line */

      determineHeight();
    } else if (e.target.closest('.sub-content__title')) {
      var _parent = target.closest('.sub-content__item');

      var _button = target.closest('.sub-content__title');

      var _dropdown = _parent.querySelector('.sub-content__description');
      /* eslint-disable-next-line */


      _dropdown.classList.contains('active') ? close(_button, _dropdown) : openSecondLevel(_button, _dropdown);
      /* eslint-disable-next-line */

      determineHeight();
    }
  });
};

accordion();

var determineHeight = function determineHeight() {
  var subContent = document.querySelector('.sub-content.active');
  var content = document.querySelector('.content');
  console.log(subContent.offsetHeight);
  console.log(content.offsetHeight);

  if (subContent.offsetHeight > content.offsetHeight) {
    /* eslint-disable-next-line */
    content.style.height = subContent.offsetHeight + 100 + 'px';
  } else if (subContent.offsetHeight < content.offsetHeight + 290) {
    content.style.height = 850 + 'px';
  }
};

determineHeight();

var searchForm = function searchForm() {
  var supportForm = document.querySelector('.support-form');
  var closeForm = document.querySelector('.close-form');
  var supportSearch = document.querySelector('.support-search');
  var searchResultsBlock = document.querySelector('.search-results__block');
  supportForm.addEventListener('keydown', function (e) {
    if (e.keyCode === 13) {
      e.preventDefault();
    }
  });

  var clearInput = function clearInput() {
    supportSearch.value = '';
  };

  supportForm.addEventListener('click', function (e) {
    if (e.target.closest('.support-search')) {
      closeForm.style.display = 'flex';
      closeForm.addEventListener('click', clearInput);
    } else {
      closeForm.style.display = 'none';
      searchResultsBlock.style.display = 'none';
    }
  });
};

searchForm();

var search = function search() {
  var searchInput = document.querySelector('.support-search');
  searchInput.addEventListener('input', function () {
    var valueSearch = searchInput.value.trim().toLowerCase();
    var searchResultsBlock = document.querySelector('.search-results__block');

    if (valueSearch.length > 1) {
      searchResultsBlock.style.display = 'block';
      $('#search').hideseek({
        highlight: true,
        hidden_mode: true
      });
    } else {
      searchResultsBlock.style.display = 'none';
    }
  });
};

search();

var popupImg = function popupImg() {
  var imgPopup = document.querySelector('.img-popup');
  var imgPopupImg = document.querySelector('.img-popup__img');
  document.body.addEventListener('click', function (e) {
    if (e.target.closest('.tab-block__img')) {
      imgPopup.style.display = 'flex';
      imgPopupImg.src = e.target.src;
    } else if (e.target.closest('.img-popup')) {
      imgPopup.style.display = 'none';
      imgPopupImg.src = '';
    }
  });
};

popupImg();
app.addLibs = {
  name: 'addLibs',
  description: 'connect the script library dynamically',
  addScriptFile: function addScriptFile(nameFile, callback) {
    var body = document.getElementsByTagName('body')[0];
    var script = document.createElement('script');

    script.onload = function () {
      return callback && callback();
    };

    script.src = "".concat(app.pathToLibsFiles, "/js/").concat(nameFile, ".js");
    body.appendChild(script);
  },
  addStyleFile: function addStyleFile(nameFile) {
    var appCss = document.getElementById('app-css');
    var link = document.createElement('link');
    link.rel = 'stylesheet';
    link.href = "".concat(app.pathToLibsFiles, "/css/").concat(nameFile, ".css");
    appCss.before(link);
  },
  initScript: function initScript(nameFile, nameLib, callback) {
    var hasLibs = null;
    var scripts = document.querySelectorAll('script');
    scripts.forEach(function (el) {
      var str = el.getAttribute('src');

      if (str) {
        if (str.indexOf(nameFile) >= 0) {
          hasLibs = true;
        }
      }
    });

    if (!hasLibs) {
      this.addScriptFile(nameFile, callback);
    } else {
      var timerId = setInterval(function () {
        if (window[nameLib] || window.jQuery && jQuery()[nameLib]) {
          callback();
          clearInterval(timerId);
        }
      }, 1);
    }
  },
  initStyle: function initStyle(nameFile) {
    var hasLibs = null;
    var link = document.querySelectorAll('link');
    link.forEach(function (el) {
      var str = el.getAttribute('src');

      if (str) {
        if (str.indexOf(nameFile) >= 0) {
          hasLibs = true;
        }
      }
    });

    if (!hasLibs) {
      this.addStyleFile(nameFile);
    }
  }
}; // app.yourScriptName.init();
//# sourceMappingURL=app.min.js.map
